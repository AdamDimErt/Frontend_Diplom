/** @format */
// –°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ ‚Äî —Ç–æ–ª—å–∫–æ —á—Ç–µ–Ω–∏–µ
"use client";

import { useQuery } from "@tanstack/react-query";
import { getMyOrders } from "@/entities/order/api/orderApi";
import { AdminTable } from "@/features/adminProductCreate/ui/AdminTable";

type OrderItem = {
  id: string;
  product: { translations: { title: string }[] };
  quantity: number;
};
type Order = {
  id: string;
  shippingAddress: string;
  amountTon: number;
  status: string;
  createdAt: string;
  items: OrderItem[];
};

export default function AdminOrdersPage() {
  const { data: orders = [], isLoading } = useQuery<
    Order[]
  >({
    queryKey: ["adminOrders"],
    queryFn: getMyOrders,
  });

  if (isLoading) return <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫–∞–∑–æ–≤‚Ä¶</p>;

  return (
    <div>
      <h1>üì¶ –°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤</h1>
      <AdminTable<Order>
        columns={[
          { header: "ID", accessor: "id" },
          { header: "–ê–¥—Ä–µ—Å", accessor: "shippingAddress" },
          { header: "–¢–æ–Ω–Ω—ã", accessor: "amountTon" },
          { header: "–°—Ç–∞—Ç—É—Å", accessor: "status" },
          { header: "–î–∞—Ç–∞", accessor: "createdAt" },
          {
            header: "–¢–æ–≤–∞—Ä—ã",
            accessor: "items",
            cell: (items: any) =>
              items.map((i:any) => (
                <div key={i.id}>
                  {i.product.translations[0]?.title} √ó{" "}
                  {i.quantity}
                </div>
              )),
          },
        ]}
        data={orders}
      />
    </div>
  );
}
